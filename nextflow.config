profiles {
	docker {
		docker.enabled = true
		docker.runOptions = "-v ${params.global.datadir}:${params.global.datadir} \
							-v ${params.global.rundir}:${params.global.rundir} \
							-v ${params.global.outdir}:${params.global.outdir}"
		process.container = "${params.sce.container}"
	}

	singularity {
		singularity.enabled = true
		singularity.runOptions = "-B ${params.global.datadir} -B ${params.global.rundir} -B ${params.global.outdir}"
		process.container = "${params.sce.container}"
	}

	standard {
		process{
			executor = "local"
		}

	}

	reports {
		report.enabled = true
	}

	test {
		includeConfig './conf/base.config'
		includeConfig './conf/container.config'
		includeConfig './conf/standAloneRun.config'
		includeConfig './processes/pcaFiltering/pcaFiltering.config'
		includeConfig './processes/normalization/normalization.config'
	}

	sce_rna {
		includeConfig './conf/base.config'
		includeConfig './conf/container.config'
		includeConfig './conf/standAloneRun.config'
		includeConfig './processes/sceObjBuilder/sceObjBuilder.config'
		includeConfig './processes/filteringEmptyDroplets/filteringEmptyDroplets.config'
		includeConfig './processes/cellQCMetrics/cellQCMetrics.config'
		includeConfig './processes/filteringThresholds/filteringThresholds.config'
		includeConfig './processes/normalization/normalization.config'
	}
}

params {
	configParser = {var, varmap ->
			if(varmap.containsKey(var)){
				return varmap[var]
			}else{
				return varmap
			}
	}
}
